{"version":3,"sources":["components/TaskSearchControl.js","components/TaskSortControl.js","components/TaskControl.js","components/TaskItem.js","components/TaskList.js","components/TaskForm.js","App.js","reportWebVitals.js","index.js"],"names":["TaskSearchControl","props","onChange","event","target","name","value","setState","onSearch","state","keyword","this","className","type","placeholder","onClick","Component","TaskSortControl","sortBy","sortValue","onSort","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","TaskControl","TaskItem","onUpdateStatus","task","onDelete","onUpdate","index","status","TaskList","onFilter","filterName","filterStatus","tasks","elmTasks","map","TaskForm","onCloseForm","onSubmit","preventDefault","onClear","nextProps","App","onToggleForm","isDisplayForm","taskEditing","onShowForm","data","genderateID","push","findIndex","localStorage","setItem","JSON","stringify","result","forEach","splice","parseInt","filter","toLowerCase","filter1","getItem","parse","Math","floor","random","toString","substring","s4","indexOf","sort","a","b","toLocaleLowerCase","elmTaskForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PA+CeA,E,kDA3CX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAKVC,SAAW,SAACC,GACR,IAAIC,EAASD,EAAMC,OACfC,EAAOD,EAAOC,KACdC,EAAQF,EAAOE,MACnB,EAAKC,SAAL,eACKF,EAAQC,KAXE,EAenBE,SAAW,WACP,EAAKP,MAAMO,SAAS,EAAKC,MAAMC,UAd/B,EAAKD,MAAQ,CACTC,QAAU,IAHC,E,0CAmBnB,WAAU,IACAA,EAAYC,KAAKF,MAAjBC,QACN,OACQ,qBAAKE,UAAU,sCAAf,SACI,sBAAKA,UAAU,cAAf,UACI,uBACIC,KAAK,OACLR,KAAK,UACLO,UAAU,eACVE,YAAY,+BACZR,MAASI,EACTR,SAAWS,KAAKT,WACpB,sBAAMU,UAAU,kBAAhB,SACI,wBAAQC,KAAK,SACDD,UAAU,kBACVG,QAAUJ,KAAKH,SAF3B,SAGA,sBAAMI,UAAU,oBAAhB,iC,GArCII,aCqDjBC,E,4MAnDXF,QAAU,SAACG,EAAQC,GACf,EAAKlB,MAAMmB,OAAOF,EAAQC,I,4CAE9B,WAAU,IAAD,OACL,OACI,qBAAKP,UAAU,sCAAf,SACI,sBAAKA,UAAU,WAAf,UACI,yBACIA,UAAU,kCACVC,KAAK,SACLQ,GAAG,gBACHC,cAAY,WACZC,gBAAc,OACdC,gBAAc,OANlB,8BAQQ,sBAAMZ,UAAU,sCAExB,qBAAIA,UAAU,gBAAgBa,kBAAgB,gBAA9C,UACI,oBAAIV,QAAU,kBAAM,EAAKA,QAAQ,OAAQ,IAAzC,SACI,mBAAGW,KAAK,SACJd,UAAmC,SAAtBD,KAAKV,MAAMiB,QAA8C,IAAzBP,KAAKV,MAAMkB,UAAmB,gBAAmB,GADlG,SAEI,sBAAMP,UAAU,4BAAhB,4BAGR,oBAAIG,QAAU,kBAAM,EAAKA,QAAQ,QAAS,IAA1C,SACA,mBAAGW,KAAK,SACAd,UAAmC,SAAtBD,KAAKV,MAAMiB,SAA+C,IAA1BP,KAAKV,MAAMkB,UAAoB,gBAAmB,GADvG,SAEQ,sBAAMP,UAAU,6BAAhB,4BAGR,oBAAIc,KAAK,YAAYd,UAAU,YAE/B,oBAAIG,QAAU,kBAAM,EAAKA,QAAQ,SAAU,IAA3C,SACA,mBAAGW,KAAK,SACAd,UAAmC,WAAtBD,KAAKV,MAAMiB,QAAgD,IAAzBP,KAAKV,MAAMkB,UAAmB,gBAAmB,GADxG,oDAKA,oBAAIJ,QAAU,kBAAM,EAAKA,QAAQ,UAAW,IAA5C,SACA,mBAAGW,KAAK,SACAd,UAAmC,WAAtBD,KAAKV,MAAMiB,SAAiD,IAA1BP,KAAKV,MAAMkB,UAAoB,gBAAmB,GADzG,sD,GAzCMH,aCefW,E,4JAZX,WACI,OACI,sBAAKf,UAAU,YAAf,UACI,cAAC,EAAD,CAAmBJ,SAAWG,KAAKV,MAAMO,WACzC,cAAC,EAAD,CACIY,OAAUT,KAAKV,MAAMmB,OACrBF,OAAUP,KAAKV,MAAMiB,OACrBC,UAAcR,KAAKV,MAAMkB,mB,GARnBH,aCqCXY,E,4MArCXC,eAAiB,WACb,EAAK5B,MAAM4B,eAAe,EAAK5B,MAAM6B,KAAKT,K,EAE9CU,SAAW,WACP,EAAK9B,MAAM8B,SAAS,EAAK9B,MAAM6B,KAAKT,K,EAExCW,SAAW,WACP,EAAK/B,MAAM+B,SAAS,EAAK/B,MAAM6B,KAAKT,K,4CAExC,WAAU,IAAD,EACgBV,KAAKV,MAApB6B,EADD,EACCA,KAAKG,EADN,EACMA,MAEX,OACI,+BACI,6BAAMA,EAAQ,IACd,6BAAMH,EAAKzB,OACX,oBAAIO,UAAU,cAAd,SACI,sBACIA,WAA4B,IAAhBkB,EAAKI,OAAkB,qBAAuB,sBAC1DnB,QAAUJ,KAAKkB,eAFnB,UAG0B,IAAhBC,EAAKI,OAAkB,oBAAe,cAGpD,qBAAItB,UAAU,cAAd,UACI,yBAAQC,KAAK,SAASD,UAAU,kBACpBG,QAASJ,KAAKqB,SAD1B,UAEI,sBAAMpB,UAAU,sBAFpB,cADJ,OAKI,yBAAQC,KAAK,SAASD,UAAU,iBACpBG,QAAUJ,KAAKoB,SAD3B,UAEI,sBAAMnB,UAAU,sBAFpB,sB,GA9BGI,aCyERmB,E,kDAvEX,WAAYlC,GAAQ,IAAD,8BACf,cAAMA,IAOVC,SAAW,SAACC,GACR,IAAIC,EAASD,EAAMC,OACfC,EAAOD,EAAOC,KACdC,EAAQF,EAAOE,MACnB,EAAKL,MAAMmC,SACE,eAAT/B,EAAwBC,EAAQ,EAAKG,MAAM4B,WAClC,iBAAThC,EAA0BC,EAAQ,EAAKG,MAAM6B,cAEjD,EAAK/B,SAAL,eACKF,EAAQC,KAfb,EAAKG,MAAQ,CACT4B,WAAa,GACbC,cAAgB,GAJL,E,0CAoBnB,WAAU,IAAD,OACCC,EAAU5B,KAAKV,MAAfsC,MADD,EAE8B5B,KAAKF,MAAlC4B,EAFD,EAECA,WAAYC,EAFb,EAEaA,aACdE,EAAWD,EAAME,KAAI,SAACX,EAAMG,GAC5B,OAAO,cAAC,EAAD,CAECA,MAAOA,EACPH,KAAMA,EACND,eAAiB,EAAK5B,MAAM4B,eAC5BE,SAAY,EAAK9B,MAAM8B,SACvBC,SAAY,EAAK/B,MAAM+B,UALlBF,EAAKT,OAOtB,OACI,wBAAOT,UAAU,yCAAjB,UACQ,gCACA,+BACI,oBAAIA,UAAU,cAAd,iBACA,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,gCACA,oBAAIA,UAAU,cAAd,yCAGJ,kCACI,+BACI,uBACA,6BACI,uBAAOC,KAAK,OACRD,UAAU,eACVP,KAAK,aACLC,MAAS+B,EACTnC,SAAaS,KAAKT,aAE1B,6BACI,yBAAQU,UAAU,eACNP,KAAK,eACLC,MAASgC,EACTpC,SAAaS,KAAKT,SAH9B,UAKI,wBAAQI,OAAQ,EAAhB,8BACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,oCAGR,0BAEFkC,Y,GAlEHxB,aC0GR0B,E,kDAzGX,WAAYzC,GAAQ,IAAD,8BACjB,cAAMA,IA+BR0C,YAAc,WACZ,EAAK1C,MAAM0C,eAjCM,EAmCnBzC,SAAW,SAACC,GACV,IAAIC,EAASD,EAAMC,OACfC,EAAOD,EAAOC,KACdC,EAAQF,EAAOE,MACN,WAATD,IACFC,EAAyB,SAAjBF,EAAOE,OAEjB,EAAKC,SAAL,eACGF,EAAQC,KA3CM,EA8CnBsC,SAAW,SAACzC,GACVA,EAAM0C,iBACN,EAAK5C,MAAM2C,SAAS,EAAKnC,OACzB,EAAKqC,UACL,EAAKH,eAlDY,EAoDnBG,QAAU,WACR,EAAKvC,SAAS,CACZF,KAAO,IACP6B,QAAS,KArDX,EAAKzB,MAAQ,CACXY,GAAK,GACLhB,KAAO,GACP6B,QAAS,GALM,E,sDAQnB,WACKvB,KAAKV,MAAM6B,MACZnB,KAAKJ,SAAS,CACZc,GAAKV,KAAKV,MAAM6B,KAAKT,GACrBhB,KAAOM,KAAKV,MAAM6B,KAAKzB,KACvB6B,OAASvB,KAAKV,MAAM6B,KAAKI,W,uCAI/B,SAA0Ba,GACrBA,GAAaA,EAAUjB,KACxBnB,KAAKJ,SAAS,CACZc,GAAK0B,EAAUjB,KAAKT,GACpBhB,KAAO0C,EAAUjB,KAAKzB,KACtB6B,OAASa,EAAUjB,KAAKI,SAElBa,EAAUjB,MAClBnB,KAAKJ,SAAS,CACZc,GAAK,GACLhB,KAAO,GACP6B,QAAS,M,oBA8Bf,WAAU,IACFb,EAAOV,KAAKF,MAAZY,GACJ,OACA,sBAAKT,UAAU,sBAAf,UACM,qBAAKA,UAAU,gBAAf,SACE,qBAAIA,UAAU,cAAd,UACW,KAAPS,EAAY,uCAAuB,4BACrC,sBAAMT,UAAU,gCAAgCG,QAAUJ,KAAKgC,mBAGnE,qBAAK/B,UAAU,aAAf,SACE,uBAAMgC,SAAWjC,KAAKiC,SAAtB,UACE,sBAAKhC,UAAU,aAAf,UACE,6CACA,uBACEC,KAAK,OACLD,UAAU,eACVP,KAAK,OACLC,MAAOK,KAAKF,MAAMJ,KAClBH,SAAUS,KAAKT,cAEnB,yDACA,yBACEU,UAAU,eACVP,KAAK,SACLC,MAAOK,KAAKF,MAAMyB,OAClBhC,SAAUS,KAAKT,SAJjB,UAKE,wBAAQI,OAAO,EAAf,+BACA,wBAAQA,OAAO,EAAf,wBACO,uBACT,sBAAKM,UAAU,cAAf,UACE,yBAAQC,KAAK,SAASD,UAAU,kBAAhC,UACE,sBAAMA,UAAU,oBADlB,uBADF,OAME,yBAAQG,QAAUJ,KAAKmC,QAAWjC,KAAK,SAASD,UAAU,iBAA1D,UACE,sBAAMA,UAAU,qBADlB,qC,GAhGGI,a,OC2NRgC,E,kDArNb,WAAY/C,GAAQ,IAAD,8BACjB,cAAMA,IAgCRgD,aAAe,WACV,EAAKxC,MAAMyC,eAA4C,OAA3B,EAAKzC,MAAM0C,YACxC,EAAK5C,SAAS,CACZ2C,eAAgB,EAChBC,YAAc,OAGhB,EAAK5C,SAAS,CACZ2C,eAAiB,EAAKzC,MAAMyC,cAC5BC,YAAc,QA1CD,EA+CnBR,YAAc,WACZ,EAAKpC,SAAS,CACZ2C,eAAgB,KAjDD,EAqDnBE,WAAa,WACX,EAAK7C,SAAS,CACZ2C,eAAgB,KAvDD,EA0DnBN,SAAW,SAACS,GAAU,IACZd,EAAU,EAAK9B,MAAf8B,MACS,KAAZc,EAAKhC,IACNgC,EAAKhC,GAAK,EAAKiC,cACff,EAAMgB,KAAKF,IAGXd,EADY,EAAKiB,UAAUH,EAAKhC,KACjBgC,EAEjB,EAAK9C,SAAS,CACZgC,MAAQA,EACRY,YAAc,OAEhBM,aAAaC,QAAQ,QAASC,KAAKC,UAAUrB,KAvE9B,EAyEjBV,eAAiB,SAACR,GAAQ,IAClBkB,EAAU,EAAK9B,MAAf8B,MAEFN,EAAQuB,oBAAUjB,GAAO,SAACT,GAC5B,OAAOA,EAAKT,KAAOA,MAEP,IAAXY,IACDM,EAAMN,GAAOC,QAAWK,EAAMN,GAAOC,OACrC,EAAK3B,SAAS,CACZgC,MAAQA,IAEVkB,aAAaC,QAAQ,QAASC,KAAKC,UAAUrB,MApFhC,EAuFjBiB,UAAY,SAACnC,GAAQ,IACbkB,EAAU,EAAK9B,MAAf8B,MACFsB,GAAU,EAMd,OALAtB,EAAMuB,SAAQ,SAAChC,EAAMG,GAChBH,EAAKT,KAAOA,IACbwC,EAAS5B,MAGN4B,GA/FQ,EAiGjB9B,SAAW,SAACV,GAAQ,IACZkB,EAAU,EAAK9B,MAAf8B,MACFN,EAAQ,EAAKuB,UAAUnC,IACb,IAAXY,IACDM,EAAMwB,OAAO9B,EAAO,GACpB,EAAK1B,SAAS,CACZgC,MAAQA,IAEVkB,aAAaC,QAAQ,QAASC,KAAKC,UAAUrB,KAE/C,EAAKI,eA3GU,EA6GjBX,SAAW,SAACX,GAAQ,IAGd8B,EAFY,EAAK1C,MAAf8B,MACM,EAAKiB,UAAUnC,IAE3B,EAAKd,SAAS,CACZ4C,YAAcA,IAEhB,EAAKC,cApHU,EAuHjBhB,SAAW,SAACC,EAAYC,GACtBA,EAAe0B,SAAS1B,EAAc,IACtC,EAAK/B,SAAS,CACZ0D,OAAS,CACP5D,KAAOgC,EAAW6B,cAClBhC,OAASI,MA5HE,EAiIjB9B,SAAW,SAACE,GACV,EAAKH,SAAS,CACZG,QAAUA,KAnIG,EAuIjBU,OAAS,SAACF,EAAQC,GAChB,EAAKZ,SAAS,CACZW,OAASA,EACTC,UAAYA,KAxIhB,EAAKV,MAAQ,CACX8B,MAAQ,GACRW,eAAgB,EAChBC,YAAc,KACdgB,QAAU,CACR9D,KAAO,GACP6B,QAAU,GAEZxB,QAAU,GACVQ,OAAS,OACTC,UAAY,GAZG,E,sDAgBnB,WACE,GAAGsC,cAAgBA,aAAaW,QAAQ,SAAS,CAC/C,IAAI7B,EAAQoB,KAAKU,MAAMZ,aAAaW,QAAQ,UAC5CzD,KAAKJ,SAAS,CACZgC,MAAQA,O,gBAKd,WACE,OAAO+B,KAAKC,MAAwB,OAAjB,EAAED,KAAKE,WAAoBC,SAAS,IAAIC,UAAU,K,yBAGvE,WACE,OAAO/D,KAAKgE,KAAOhE,KAAKgE,KAAO,IAAMhE,KAAKgE,KAAO,IAAMhE,KAAKgE,KAAO,IAAMhE,KAAKgE,KAAO,IAAMhE,KAAKgE,KAAOhE,KAAKgE,KAAOhE,KAAKgE,O,oBA+G1H,WAAU,IAAD,EAC0EhE,KAAKF,MAAhF8B,EADC,EACDA,MAAOW,EADN,EACMA,cAAeC,EADrB,EACqBA,YAAagB,EADlC,EACkCA,QAASzD,EAD3C,EAC2CA,QAASQ,EADpD,EACoDA,OAAQC,EAD5D,EAC4DA,UAChEgD,IACEA,EAAQ9D,OACTkC,EAAQA,EAAM0B,QAAO,SAACnC,GACpB,OAA0D,IAAnDA,EAAKzB,KAAK6D,cAAcU,QAAQT,EAAQ9D,UAGjDkC,EAAQA,EAAM0B,QAAO,SAACnC,GACpB,OAAuB,IAApBqC,EAAQjC,OACFJ,EAEAA,EAAKI,UAA+B,IAAnBiC,EAAQjC,YAI1B,SAAXhB,EACDqB,EAAMsC,MAAK,SAACC,EAAGC,GACb,OAAID,EAAEzE,KAAO0E,EAAE1E,KAAac,EACpB2D,EAAEzE,KAAO0E,EAAE1E,MAAcc,OAA5B,KAGPoB,EAAMsC,MAAK,SAACC,EAAGC,GACb,OAAID,EAAE5C,OAAS6C,EAAE7C,QAAgBf,EACzB2D,EAAE5C,OAAS6C,EAAE7C,OAAef,OAA/B,KAOToB,EAAQ0B,iBAAO1B,GAAO,SAACT,GACrB,OAAyE,IAAlEA,EAAKzB,KAAK6D,cAAcU,QAAQlE,EAAQsE,wBAEjD,IAAIC,EAAc/B,EACR,cAAC,EAAD,CAAUN,SAAUjC,KAAKiC,SAC3BD,YAAehC,KAAKgC,YACpBb,KAAMqB,IAAmB,GACjC,OACE,sBAAKvC,UAAU,YAAf,UACE,sBAAKA,UAAU,cAAf,UACE,mEAA0B,0BAE5B,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,sCAAf,SACIqE,IAEJ,sBAAKrE,UAAYsC,EAAgB,sCAAwC,0CAAzE,UACE,yBACErC,KAAK,SACLD,UAAU,kBACVG,QAAUJ,KAAKsC,aAHjB,UAIE,sBAAMrC,UAAU,oBAJlB,+BAQA,cAAC,EAAD,CACEJ,SAAWG,KAAKH,SAChBY,OAAWT,KAAKS,OAChBF,OAAWA,EACXC,UAAcA,IAChB,cAAC,EAAD,CAAUoB,MAAQA,EACdV,eAAiBlB,KAAKkB,eACtBE,SAAWpB,KAAKoB,SAChBC,SAAWrB,KAAKqB,SAChBI,SAAWzB,KAAKyB,wB,GA/MdpB,aCKHkE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4296a6bf.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TaskSearchControl extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyword : ''\r\n        }\r\n    }\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    } \r\n\r\n    onSearch = () =>{\r\n        this.props.onSearch(this.state.keyword)\r\n    }\r\n\r\n    render() {\r\n        var { keyword } = this.state;\r\n        return(\r\n                <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"input-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"keyword\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Nhập từ khóa...\"\r\n                            value= { keyword }\r\n                            onChange= {this.onChange }></input>\r\n                        <span className=\"input-group-btn\">\r\n                            <button type=\"button\" \r\n                                        className=\"btn btn-primary\"\r\n                                        onClick={ this.onSearch }>\r\n                            <span className=\"fa fa-search mr-5\">Tìm</span>\r\n                            </button>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\nexport default TaskSearchControl;\r\n","import React, { Component } from 'react';\r\n\r\nclass TaskSortControl extends Component {\r\n    \r\n    onClick = (sortBy, sortValue) => {\r\n        this.props.onSort(sortBy, sortValue);\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"dropdown\">\r\n                    <button \r\n                        className=\"btn btn-primary dropdown-toggle\" \r\n                        type=\"button\" \r\n                        id=\"dropdownMenu1\" \r\n                        data-toggle=\"dropdown\" \r\n                        aria-haspopup=\"true\" \r\n                        aria-expanded=\"true\">\r\n                            Sắp Xếp \r\n                            <span className=\"fa fa-caret-square-o-down ml-5\"></span>\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                        <li onClick={ () => this.onClick('name', 1) }>\r\n                            <a role=\"button\"     \r\n                                className={ (this.props.sortBy === 'name' && this.props.sortValue === 1) ? 'sort_selected'  : ''  }>\r\n                                <span className=\"fa fa-sort-alpha-asc pr-5\">Tên A-Z</span>\r\n                            </a>\r\n                        </li>\r\n                        <li onClick={ () => this.onClick('name', -1) }>\r\n                        <a role=\"button\"     \r\n                                className={ (this.props.sortBy === 'name' && this.props.sortValue === -1) ? 'sort_selected'  : ''  }>\r\n                                <span className=\"fa fa-sort-alpha-desc pr-5\">Tên Z-A</span>\r\n                            </a>\r\n                        </li>\r\n                        <li role=\"separator\" className=\"divider\">\r\n                        </li>\r\n                        <li onClick={ () => this.onClick('status', 1) }>\r\n                        <a role=\"button\"     \r\n                                className={ (this.props.sortBy === 'status' && this.props.sortValue === 1) ? 'sort_selected'  : ''  }>\r\n                                Trạng Thái Kích Hoạt\r\n                            </a>\r\n                        </li>\r\n                        <li onClick={ () => this.onClick('status', -1) }>\r\n                        <a role=\"button\"     \r\n                                className={ (this.props.sortBy === 'status' && this.props.sortValue === -1) ? 'sort_selected'  : ''  }>\r\n                                Trạng Thái Ẩn\r\n                            </a>\r\n                        </li>\r\n                    </ul>                    \r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default TaskSortControl;\r\n","import React, { Component } from 'react';\r\nimport TaskSearchControl from './TaskSearchControl'\r\nimport TaskSortControl from './TaskSortControl'\r\n\r\nclass TaskControl extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"row mt-15\">\r\n                <TaskSearchControl onSearch={ this.props.onSearch }/>\r\n                <TaskSortControl \r\n                    onSort= { this.props.onSort }\r\n                    sortBy= { this.props.sortBy }\r\n                    sortValue = { this.props.sortValue }/>\r\n            </div>\r\n        );          \r\n    }\r\n}\r\nexport default TaskControl;","import React, { Component } from 'react';\r\n\r\nclass TaskItem extends Component {\r\n    \r\n    onUpdateStatus = () => {\r\n        this.props.onUpdateStatus(this.props.task.id);\r\n    }\r\n    onDelete = () => {\r\n        this.props.onDelete(this.props.task.id);\r\n    }\r\n    onUpdate = () => {\r\n        this.props.onUpdate(this.props.task.id);\r\n    }\r\n    render() {\r\n        var { task,index } = this.props;\r\n\r\n        return(\r\n            <tr>\r\n                <td>{ index + 1 }</td>\r\n                <td>{ task.name }</td>\r\n                <td className=\"text-center\">\r\n                    <span \r\n                        className={ task.status === true ? 'label label-danger' : 'label label-success' } \r\n                        onClick={ this.onUpdateStatus }>\r\n                            { task.status === true ? 'Kích hoạt' :  'Ẩn' }\r\n                        </span>\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <button type=\"button\" className=\"btn btn-warning\"\r\n                                onClick={this.onUpdate}>\r\n                        <span className=\"fa fa-pencil mr-5\"></span>Sửa\r\n                    </button>&nbsp;\r\n                    <button type=\"button\" className=\"btn btn-danger\"\r\n                                onClick={ this.onDelete }>\r\n                        <span className=\"fa fa-pencil mr-5\"></span>Xóa\r\n                    </button>\r\n                </td>\r\n            </tr>     \r\n        );          \r\n    }\r\n}\r\nexport default TaskItem;","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem'\r\n\r\nclass TaskList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filterName : '',\r\n            filterStatus : -1 // all : -1, active: 1, deactive : 0\r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.props.onFilter(\r\n            name === 'filterName' ? value : this.state.filterName,\r\n            name === 'filterStatus' ? value : this.state.filterStatus\r\n        )\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    render() {\r\n        var { tasks } = this.props; // var tasks = this.props.tasks\r\n        var { filterName, filterStatus } = this.state;\r\n        var elmTasks = tasks.map((task, index ) =>  {\r\n            return <TaskItem \r\n                    key={task.id} \r\n                    index={index} \r\n                    task={task}\r\n                    onUpdateStatus={ this.props.onUpdateStatus }\r\n                    onDelete= { this.props.onDelete }\r\n                    onUpdate= { this.props.onUpdate } />\r\n        });\r\n        return(\r\n            <table className=\"table table-bordered table-hover mt-15\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th className=\"text-center\">STT</th>\r\n                        <th className=\"text-center\">Tên</th>\r\n                        <th className=\"text-center\">Trạng Thái</th>\r\n                        <th className=\"text-center\">Hành Động</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>\r\n                                <input type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    name=\"filterName\"\r\n                                    value= { filterName }\r\n                                    onChange = { this.onChange }/>\r\n                            </td>\r\n                            <td>\r\n                                <select className=\"form-control\" \r\n                                            name=\"filterStatus\"\r\n                                            value= { filterStatus }\r\n                                            onChange = { this.onChange }\r\n                                            >\r\n                                    <option value={-1}>Tất Cả</option>\r\n                                    <option value={0}>Ẩn</option>\r\n                                    <option value={1}>Kích Hoạt</option>\r\n                                </select>\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n                        { elmTasks }\r\n                    </tbody>\r\n            </table>   \r\n        );          \r\n    }\r\n}\r\nexport default TaskList;","import React, { Component } from 'react';\r\n\r\nclass TaskForm extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        id : '',\r\n        name : '',\r\n        status : false\r\n      }\r\n    }\r\n    componentWillMount() {\r\n      if(this.props.task) {\r\n        this.setState({\r\n          id : this.props.task.id,\r\n          name : this.props.task.name,\r\n          status : this.props.task.status\r\n        });\r\n      }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n      if(nextProps && nextProps.task) {\r\n        this.setState({\r\n          id : nextProps.task.id,\r\n          name : nextProps.task.name,\r\n          status : nextProps.task.status\r\n        });\r\n      }else if(!nextProps.task){\r\n        this.setState({\r\n          id : '',\r\n          name : '',\r\n          status : false\r\n        })\r\n      }\r\n    }\r\n    onCloseForm = () => {\r\n      this.props.onCloseForm();\r\n    }\r\n    onChange = (event) => {\r\n      var target = event.target;\r\n      var name = target.name;\r\n      var value = target.value;\r\n      if( name === 'status'){\r\n        value = target.value === 'true' ? true : false\r\n      }\r\n      this.setState({\r\n        [name] : value\r\n      });\r\n    }\r\n    onSubmit = (event) => {\r\n      event.preventDefault();\r\n      this.props.onSubmit(this.state);\r\n      this.onClear();\r\n      this.onCloseForm();\r\n    }\r\n    onClear = () => {\r\n      this.setState({\r\n        name : ' ',\r\n        status : false\r\n      });\r\n    }\r\n    render() {\r\n      var { id } = this.state;\r\n        return(\r\n        <div className=\"panel panel-warning\">\r\n              <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title\">\r\n                  { id !== '' ? 'Cập nhật công việc' : 'Thêm công việc'}\r\n                  <span className=\"fa fa-times-circle text-right\" onClick={ this.onCloseForm }></span>\r\n                </h3>\r\n              </div>\r\n              <div className=\"panel-body\">\r\n                <form onSubmit={ this.onSubmit }>\r\n                  <div className=\"form-group\">\r\n                    <label>Tên :</label>\r\n                    <input \r\n                      type=\"text\" \r\n                      className=\"form-control\" \r\n                      name=\"name\" \r\n                      value={this.state.name}\r\n                      onChange={this.onChange}/>\r\n                  </div>\r\n                  <label>Trạng Thái :</label>\r\n                  <select \r\n                    className=\"form-control\" \r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}>\r\n                    <option value={true}>Kích Hoạt</option>\r\n                    <option value={false}>Ẩn</option>\r\n                  </select><br/>\r\n                  <div className=\"text-center\">\r\n                    <button type=\"submit\" className=\"btn btn-warning\">\r\n                      <span className=\"fa fa-plus mr-5\"></span>\r\n                      Lưu Lại\r\n                    </button>\r\n                    &nbsp;\r\n                    <button onClick={ this.onClear }  type=\"button\" className=\"btn btn-danger\">\r\n                      <span className=\"fa fa-close mr-5\"></span>\r\n                      Hủy Bỏ\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default TaskForm;","import React, { Component } from 'react';\nimport './App.css';\nimport TaskControl from './components/TaskControl';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm'\nimport { findIndex, filter } from 'lodash';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks : [],\n      isDisplayForm : false,\n      taskEditing : null,\n      filter1 : {\n        name : '',\n        status : -1\n      },\n      keyword : '',\n      sortBy : 'name',\n      sortValue : 1\n    }\n  }\n\n  componentWillMount() {\n    if(localStorage && localStorage.getItem('tasks')){\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks : tasks\n      });\n    }\n  }\n  \n  s4(){\n    return Math.floor((1+Math.random())*0x10000 ).toString(16).substring(1);\n  }\n\n  genderateID(){\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + this.s4();\n  }\n\n  onToggleForm = () => {\n    if(this.state.isDisplayForm && this.state.taskEditing !== null){\n      this.setState({\n        isDisplayForm : true,\n        taskEditing : null\n      })\n    }else{\n      this.setState({\n        isDisplayForm : !this.state.isDisplayForm,\n        taskEditing : null\n      })\n      }\n    }\n\n  onCloseForm = () => {\n    this.setState({\n      isDisplayForm : false\n    })\n  }\n\n  onShowForm = () => {\n    this.setState({\n      isDisplayForm : true\n    })\n  }\n  onSubmit = (data) => {\n      var { tasks } = this.state;\n      if(data.id === ''){\n        data.id = this.genderateID();\n        tasks.push(data);\n      }else{\n        var index = this.findIndex(data.id);\n        tasks[index] = data;\n      }\n      this.setState({\n        tasks : tasks,\n        taskEditing : null\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));    \n}\n    onUpdateStatus = (id) => {\n      var { tasks } = this.state;\n      //var index = this.findIndex(id)\n      var index = findIndex(tasks, (task) => {\n        return task.id === id;\n      });\n      if(index !== -1){\n        tasks[index].status = ! tasks[index].status;\n        this.setState({\n          tasks : tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks))\n      }\n    }\n    findIndex = (id) => {\n      var { tasks } = this.state;\n      var result = -1;\n      tasks.forEach((task, index) => {\n        if(task.id === id){\n          result = index;\n        }\n      });\n      return result;\n    }\n    onDelete = (id) => {\n      var { tasks } = this.state;\n      var index = this.findIndex(id)\n      if(index !== -1){\n        tasks.splice(index, 1);\n        this.setState({\n          tasks : tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks))\n      }\n      this.onCloseForm();\n    }\n    onUpdate = (id) => {\n      var { tasks } = this.state;\n      var index = this.findIndex(id);\n      var taskEditing = tasks[index];\n      this.setState({\n        taskEditing : taskEditing\n      });\n      this.onShowForm();\n    }\n\n    onFilter = (filterName, filterStatus) => {\n      filterStatus = parseInt(filterStatus, 10);\n      this.setState({\n        filter : {\n          name : filterName.toLowerCase(),\n          status : filterStatus\n        }\n      });\n    }\n\n    onSearch = (keyword) => {\n      this.setState({\n        keyword : keyword\n      })\n    }\n\n    onSort = (sortBy, sortValue) => {\n      this.setState({\n        sortBy : sortBy,\n        sortValue : sortValue\n      })\n    }\n  render() {\n    var { tasks, isDisplayForm, taskEditing, filter1, keyword, sortBy, sortValue } = this.state;\n    if(filter1){\n      if(filter1.name){\n        tasks = tasks.filter((task) => {\n          return task.name.toLowerCase().indexOf(filter1.name) !== -1;\n        })\n      }\n        tasks = tasks.filter((task) => {\n          if(filter1.status === -1){\n            return task;\n          }else{\n            return task.status === (filter1.status === 1 ? true : false )\n          }\n        });\n    }\n    if(sortBy === 'name') {\n      tasks.sort((a, b) => {\n        if( a.name > b.name) return sortValue;\n        else if(a.name < b.name) return -sortValue;\n      });\n    }else{\n      tasks.sort((a, b) => {\n        if( a.status > b.status) return -sortValue;\n        else if(a.status < b.status) return sortValue;\n      });\n    }\n    \n    // tasks = tasks.filter((task) => {\n    //   return task.name.toLowerCase().indexOf(keyword) !== -1;\n    //   })\n    tasks = filter(tasks, (task) => {\n      return task.name.toLowerCase().indexOf(keyword.toLocaleLowerCase()) !== -1\n    });\n    var elmTaskForm = isDisplayForm \n            ? <TaskForm onSubmit={this.onSubmit} \n            onCloseForm= { this.onCloseForm }\n            task={taskEditing }/ > : '';\n    return(\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Quản Lý Công Việc</h1><hr/>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\n            { elmTaskForm }\n          </div>\n          <div className={ isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12' }>\n            <button \n              type=\"button\" \n              className=\"btn btn-primary\"\n              onClick={ this.onToggleForm }>\n              <span className=\"fa fa-plus mr-5\" >\n              </span>\n                Thêm Công Việc\n            </button>\n            <TaskControl \n              onSearch={ this.onSearch }\n              onSort = { this.onSort }\n              sortBy = { sortBy }\n              sortValue = { sortValue }/>  \n            <TaskList tasks={ tasks } \n                onUpdateStatus={ this.onUpdateStatus } \n                onDelete={ this.onDelete }\n                onUpdate={ this.onUpdate }\n                onFilter={ this.onFilter }/>\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}